name: Create Tagged Release
on:
  push:
    tags:
      - '*'
jobs:
  bump-version:
    name: 'Bump Version'
    runs-on: ubuntu-latest
    steps:
      - name: Get tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Bump version
        run: node .github/actions/bump-version.js
        env:
          TGT_RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
      - name: Push changes
        uses: EndBug/add-and-commit@v9
        with:
          add: "['fxmanifest.lua', 'package.json']"
          push: true
          default_author: github_actions
          message: 'chore: bump version to ${{ env.RELEASE_VERSION }}'

  create-tagged-release:
    name: Build Project & Create Release
    runs-on: ubuntu-latest
    needs: [bump-version]
    strategy:
      matrix:
        node-version: [16]
    steps:
      - name: Get tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - uses: actions/checkout@v3
        with:
          ref: main
      - uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Build project
        run: pnpm run build
      - name: Bundle files
        run: |
          mkdir -p ./temp/wide-api
          cp ./{LICENSE,README.md,config.json,config.schema.json,fxmanifest.lua} ./temp/wide-api
          cp -r ./dist ./temp/wide-api/dist
          cd ./temp && zip -r ../wide-api.zip ./wide-api
      - name: Create Release
        uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          prerelease: false
          title: ${{ env.RELEASE_VERSION }}
          files: wide-api.zip
